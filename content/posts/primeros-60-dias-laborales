---
Title: "Tus primeros 60 días trabajando como ingeniero"
Description: "Consejos para hacerte tu lugar en el ambiente laboral cuando recién arrancás a trabajar"
Keywords:
- principiantes
- productidad
- novato
- aprendizaje
- mejores-practicas

Tags:
- sysarmy
- dev
- desarrolladores
- mejores-practicas

Thumbnail: assets/primeros-60-días-ingeniero.jpg
socialImage: assets/primeros-60-días-ingeniero.jpg
featuredImage: assets/primeros-60-días-ingeniero.jpg

Topics:
- dev
- desarrollo
- software
- mejores-practicas


markup: markdown
date: 2022-01-10
draft: false
---


Te acabás de recibir y estás buscando trabajo. Armás un buen CV y lo mandás por mail a todos lados. Recibís respuestas interesadas de algunas compañías de tecnología y tal vez algunas tareas de programación para hacer en casa, seguido de una entrevista telefónica. ¡Te fue bien y te ofrecieron a una entrevista! Luego de varias horas de conversaciones inspiradas en la tortura del pizarrón, almuerzo y referencias te ofrecieron tu primer trabajo en ingenieria y has aceptado. Empezás en dos semanas. ¡Felicitaciones!

## ¿Y ahora qué?
Primero, **no hagas nada**. Tomate esas dos semanas para relajarte y adelantar tus lecturas recreacionales.Tirate en la playa. Tomate un trago. Algunos jefes te van a ofrecer algunas cosas para hacer (por lo general leer o repasar algún lenguaje en particular), aceptá estas sugerencias con gusto, pero no las pidas. No te sientas obligado a hacer nada. Personalmente, espero que mis nuevas contrataciones lleguen descansadas y frescas a su primer día laboral - si hubiera querido que empiecen antes, lo hubiera pedido.

## Tu primer día
Cuando llegás al trabajo sos un pasajero solitario que se enfrenta a una organización entera que se mueve como un tren de alta velocidad. No hay manera de que te subas de un salto a toda velocidad, necesitas ganar algo de momento propio. Tu primer día querés descubrir quién es tu **mentor** - una persona técnica a quién recurrir por defecto. También querrás encontrar a tu **guía espiritual** - un individuo amigable, no técnico, tal vez del equipo comercial. Siempre podes consultar con quienes te entrevistaron y mejor si ambas personas han estado con la compañía por mucho tiempo.

## Primeros pasos en ingeniería
Es muy posible que hayas caído como en paracaídas en un proyecto de software gigante en el que 20 personas diferentes han estado trabajando durante los últimos 5 años. Tu primera tarea es, casi siempre, armarte un ambiente de desarrollo, para correr el proyecto localmente y modificar código trivial que es difícil de localizar. La parte de armarlo no es un gran logro en sí, así que hacelo rápido y ni lo menciones. Fijate si podes hacerle la vida más fácil al próximo desarrollador que entre, tal vez contribuyendo con la documentación que te dieron o creandola.

Generalmente se te asigna un tema pequeño semi trivial, hacé tu **mejor esfuerzo**, incluso para una tarea completamente trivial. Asegurate de seguirla hasta producción.

## Primeros pasos no ** ingenieriles ** 
Cuando conozcas a otros integrantes del equipo, siempre preguntales **qué hacen** y cómo sus tareas **encajan en el panorama general**. Eventualmente querés entender quién es quién en la organización, cómo está estructurada y en qué consiste el negocio. Procurate un organigrama. Averiguá cuáles son las metas de tu equipo como así también los objetivos y metas de la compañía. Entendé el itinerario y encontrarte en él.

## Lográ un impacto que sume
En tus primeros 60 días queres tener un **impacto que contribuya**. Esto usualmente significa sacar producción una función que tenga efecto real en los clientes. Para lograr esto siempre tenés que progresar y nunca trabarte en algo trivial. Cuando lo necesites, no dudes en **hacer preguntas**.
Más allá de eso, una buena razón por la cual es bueno contratar ingenieros junior es que vienen sin arruinar por varios años de rutina [“Dilbertesca”](https://es.wikipedia.org/wiki/Dilbert) o puede que sea una nueva generación de humanos, con ideas nuevas y frescas. Siempre **desafiá las asunciones** y decí lo que pensás. Dicho esto, pensalo como **ganar crédito**, y después como **gastar crédito** - primero hacé algo y después desafía el status quo.

Recordá que es más fácil meterte en algo que salirte. Si tomás una iniciativa vas a estar pegado a ella pase lo que pase. Hacé una cosa a la vez.

Si tu **trabajo no es criticado**, si tus PR (contribuciones al código) son mergeados (sumados) sin comentarios, si parece demasiado fácil, **lo estás haciendo mal**. Los ingenieros con más experiencia siempre van a encontrar algo malo en tu código y querés sus opiniones. Si no te las están dando, o es que ya no les interesa, o tienen miedo de herir tus sentimientos. Pedíselas y acordate que escribir código malo no te hace una mala persona, sus críticas son solo sobre tu trabajo, y su objetivo es ayudarte a mejorar como ingeniero.

Siempre mirá si falta algo. ¿No hay pruebas en este proyecto? Agregá algunas. ¿No hay documentación sobre cómo arrancar? Escribila.

## Cómo comportarse
Como un nuevo empleado no tenés idea de cómo es la cultura o el ambiente, pero hay cosas que son aplicables universalmente. Se **modesto y respetuoso**, se **conciso, breve y claro** en tus comunicaciones y **hacé declaraciones precisas**. Mirá [Leyes no escritas de la ingeniería](https://books.google.com.ar/books/about/Leyes_no_escritas_de_la_ingenieria.html?id=FPvhMgEACAAJ&redir_esc=y), una buena lectura que todavía es relevante hoy en día.

No te olvides de que trabajás para alguien más. Te van a felicitar por tus logros, pero los líderes de tu equipo se responsabilizarán de tus fallas. Trabajá con ellos y prestá atención a lo que dicen o el trabajo que quieran que hagas.

Tratá de no **quejarte sobre la gente** si no es de manera directa y en privado. Si tenés algo malo para decir sobre alguien, decíselo a ellos, no a tu jefe o, peor, su jefe. También considerá el viejo proverbio ruso que reza que criticar a la gerencia es como hacer pis contra el viento - siempre te pega a vos.

## Charla
Hace poco presenté esto en la Flatiron school, [link con las diapositivas](https://www.slideshare.net/dblockdotorg/howto-developer-thriving-in-your-first-60-days-at-work)

* La versión original de este post se puede encontrar en [dB.dblock.org](https://code.dblock.org/2015/04/23/your-first-60-days-at-an-engineering-job.html) (inglés).
* Autoría por [Daniel Doubrovkine](https://code.dblock.org/about/), traducción por [@jcasarini](https://twitter.com/jcasarini), revisión por []().
